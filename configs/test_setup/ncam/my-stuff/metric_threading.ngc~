o<metric_threading> sub
(author : Fernand Veilleux)
(CALL begin_z, end_z, units, major diameter, minor diameter, pitch, degression, init_depth, peak, taper, finish_passes, taper_angle, helix count)

	#<begin_z>       =  #1
	#<end_z>         =  #2
	#<major_dia>     =  #4
	#<minor_dia>     =  #5
	#<pitch>         =  #6
	#<degress>       =  #7
	#<idepth>        =  #8
	#<peak>          =  #9
	#<taper>         = #10
	#<finish_passes> = #11
	#<taper_angle>   = [90 - #12]
	#<helix_count>   = #13

	o91 if [#<minor_dia> EQ -1] (Automatic minor diameter)
		#<triangle_height> = [SIN[60] * #<pitch>]
	o91 else (User entered minor diameter)
		#<triangle_height>  = ABS[#4 - #5]
	o91 endif
	
	o92 if [#<peak> GT 0.0] (Positive peak means external thread)
		#<truncation> = [#<triangle_height> / 4]
	o92 else (Negative peak means internal thread)
		#<truncation> = [#<triangle_height> / 8]
	o92 endif
	
	#<depth> = [[#<triangle_height> - #<truncation>] * 2]
	#<taper_length> = [TAN[#<taper_angle>] * #<depth> / 2]

	#<pass>   = 1
	#<z_step> = [TAN[30] * #<depth> / 2]
	
	o113 if [#<begin_z> LT #<end_z>]
		#<z_step> = -#<z_step>
	o113 endif

	/ #<thread_count> = [ABS[FIX[[#<begin_z> - #<end_z>] / #<pitch>]] + #<helix_count> - 1]
	/ o104 if [#<peak> GT 0.0]
		/ #<s_x> = [#<major_dia> - #<depth>]
		/ #<l_x> = #<major_dia>
	/ o104 else
		/ #<s_x> = #<major_dia>
		/ #<l_x> = [#<major_dia> - #<depth>]
	/ o104 endif
	/ #<z> = [#<begin_z> + #<z_step> * [#<helix_count> - 1] * 2]
	/ o101 while [#<pass> LE #<thread_count>]
        / G0 X#<s_x> Z[#<z>]
		/ #<z> = [#<z> - #<z_step>]
		/ G1 X#<l_x> Z#<z>
		/ #<z> = [#<z> - #<z_step>]
		/ G0 Z[#<z> + #<z_step>]
		/ G1 X#<s_x> Z#<z>
        / #<pass> = [#<pass> + 1]
	/ o101 endwhile
	/ o<metric_threading> return

	o71 if [#<_x> LT [#<_wp_dia_od> + #<_X_rapid>]]
		G0 X[#<_wp_dia_od> + #<_X_rapid>]
	o71 endif

	o81 if [#<peak> GT 0.0]
		G0 Z[#<begin_z> + #<z_step> * [#<helix_count> - 1] * 2]
		G0 X[#<major_dia> + #<peak>]
	o81 else
		o83 if [#<begin_z> LT #<end_z>]
			G0 Z[#<end_z> + #<_z_rapid>]
			G0 X[#<major_dia> - #<depth> + #<peak>]
		o83 else
			G0 Z[#<begin_z> + #<_z_rapid>]
			G0 X[#<major_dia> - #<depth> + #<peak>]
		o83 endif
	o81 endif

	o110 while [#<pass> LE #<helix_count>]
		G0 Z[#<begin_z> + #<z_step> * [#<pass> - 0.5] * 2]
		G76 P[#<pitch> * #<helix_count>] Z#<end_z> I-#<peak> J#<idepth> R#<degress> K#<depth> Q30 H#<finish_passes> E#<taper_length> L#<taper>
		#<pass> = [#<pass> + 1]
	o110 endwhile

	o97 if [#<peak> LT 0.0]
		o98 if [#<begin_z> GT #<end_z>]
			G0 Z[#<begin_z> + #<_z_rapid>]
		o98 else
			G0 Z[#<end_z> + #<_z_rapid>]
		o98 endif
	o97 endif
	G0 X[#<_wp_dia_od> + #<_X_rapid>]
	
o<metric_threading> endsub
